{
    "sourceFile": "lib/utils/server/start_server.dart",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 14,
            "patches": [
                {
                    "date": 1695489225137,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1695489867011,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -50,8 +50,9 @@\n         ..add('Content-Range', 'bytes $start-$end/$videoSize')\r\n         ..add('Accept-Ranges', 'bytes')\r\n         ..add('Content-Length', contentLength)\r\n         ..add('Content-Type', 'video/mp4');\r\n+      print(\"info headers $res\");\r\n       await videoStream.pipe(res);\r\n       await res.close();\r\n     } else if (uri == '/') {\r\n       res.headers.add('Content-Type', 'text/html');\r\n"
                },
                {
                    "date": 1695489944733,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -43,9 +43,9 @@\n \r\n       var videoStream = videoFile.openRead(start, end);\r\n       // Create headers\r\n       final contentLength = end - start;\r\n-      print('$start $end $contentLength');\r\n+      print('llego el dato : $start $end $contentLength');\r\n \r\n       res.headers\r\n         ..add('Content-Range', 'bytes $start-$end/$videoSize')\r\n         ..add('Accept-Ranges', 'bytes')\r\n"
                },
                {
                    "date": 1695489977771,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,9 @@\n <html lang=\"en\">\r\n   <head>\r\n     <meta charset=\"UTF-8\" />\r\n     <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n-    <title>HTTP Video Stream</title>\r\n+    <title>essential_control</title>\r\n   </head>\r\n   <body>\r\n     <video id=\"videoPlayer\" width=\"650\" controls muted=\"muted\" autoplay>\r\n       <source src=\"/video\" type=\"video/mp4\" />\r\n"
                },
                {
                    "date": 1695490185583,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -59,6 +59,7 @@\n       res.write(indexHtml);\r\n       await res.close();\r\n     }\r\n   });\r\n+  print(\"host : ${hostAddress}, portNumber : ${portNumber}\");\r\n   return '$hostAddress:$portNumber';\r\n }\r\n"
                },
                {
                    "date": 1695491662082,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,9 +25,10 @@\n   var portNumber = 4655;\r\n   var server = await HttpServer.bind(hostAddress, portNumber, shared: true);\r\n   server.listen((req) async {\r\n     var res = req.response;\r\n-    var uri = req.uri.toString();\r\n+    print(\"respuesta : $res\");\r\n+    /*var uri = req.uri.toString();\r\n     if (uri == '/video') {\r\n       final range = req.headers.value('range');\r\n       var videoFile = File(filePath);\r\n       var videoSize = await videoFile.length();\r\n@@ -57,9 +58,9 @@\n     } else if (uri == '/') {\r\n       res.headers.add('Content-Type', 'text/html');\r\n       res.write(indexHtml);\r\n       await res.close();\r\n-    }\r\n+    }*/\r\n   });\r\n   print(\"host : ${hostAddress}, portNumber : ${portNumber}\");\r\n   return '$hostAddress:$portNumber';\r\n }\r\n"
                },
                {
                    "date": 1695491936933,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,66 +1,17 @@\n import 'dart:io';\r\n import 'package:network_info_plus/network_info_plus.dart';\r\n-import 'dart:math';\r\n \r\n-var indexHtml = '''\r\n-      <!DOCTYPE html>\r\n-<html lang=\"en\">\r\n-  <head>\r\n-    <meta charset=\"UTF-8\" />\r\n-    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n-    <title>essential_control</title>\r\n-  </head>\r\n-  <body>\r\n-    <video id=\"videoPlayer\" width=\"650\" controls muted=\"muted\" autoplay>\r\n-      <source src=\"/video\" type=\"video/mp4\" />\r\n-    </video>\r\n-  </body>\r\n-</html>\r\n \r\n-      ''';\r\n-\r\n-startServer(filePath) async {\r\n+startServer(serverIp) async {\r\n   final info = NetworkInfo();\r\n   var hostAddress = await info.getWifiIP();\r\n   var portNumber = 4655;\r\n-  var server = await HttpServer.bind(hostAddress, portNumber, shared: true);\r\n+  //var server = await HttpServer.bind(hostAddress, portNumber, shared: true);\r\n+  var server = await HttpServer.bind(\"192.168.1.227\", portNumber, shared: true);\r\n   server.listen((req) async {\r\n     var res = req.response;\r\n-    print(\"respuesta : $res\");\r\n-    /*var uri = req.uri.toString();\r\n-    if (uri == '/video') {\r\n-      final range = req.headers.value('range');\r\n-      var videoFile = File(filePath);\r\n-      var videoSize = await videoFile.length();\r\n-      const CHUNK_SIZE = 1000000;\r\n-      final startValue = range!.replaceAllMapped(\r\n-          RegExp(\r\n-            r'(\\D)',\r\n-          ),\r\n-          (match) => '');\r\n-      final start = int.parse(startValue);\r\n-\r\n-      var end = min<int>(start + CHUNK_SIZE, videoSize);\r\n-\r\n-      var videoStream = videoFile.openRead(start, end);\r\n-      // Create headers\r\n-      final contentLength = end - start;\r\n-      print('llego el dato : $start $end $contentLength');\r\n-\r\n-      res.headers\r\n-        ..add('Content-Range', 'bytes $start-$end/$videoSize')\r\n-        ..add('Accept-Ranges', 'bytes')\r\n-        ..add('Content-Length', contentLength)\r\n-        ..add('Content-Type', 'video/mp4');\r\n-      print(\"info headers $res\");\r\n-      await videoStream.pipe(res);\r\n-      await res.close();\r\n-    } else if (uri == '/') {\r\n-      res.headers.add('Content-Type', 'text/html');\r\n-      res.write(indexHtml);\r\n-      await res.close();\r\n-    }*/\r\n+    print(\"respuesta : ${res}\");\r\n   });\r\n   print(\"host : ${hostAddress}, portNumber : ${portNumber}\");\r\n   return '$hostAddress:$portNumber';\r\n }\r\n"
                },
                {
                    "date": 1695491948242,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,9 +8,9 @@\n   //var server = await HttpServer.bind(hostAddress, portNumber, shared: true);\r\n   var server = await HttpServer.bind(\"192.168.1.227\", portNumber, shared: true);\r\n   server.listen((req) async {\r\n     var res = req.response;\r\n-    print(\"respuesta : ${res}\");\r\n+    print(\"respuesta : ${res.headers}\");\r\n   });\r\n   print(\"host : ${hostAddress}, portNumber : ${portNumber}\");\r\n   return '$hostAddress:$portNumber';\r\n }\r\n"
                },
                {
                    "date": 1695492063955,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,7 @@\n import 'dart:io';\r\n import 'package:network_info_plus/network_info_plus.dart';\r\n \r\n-\r\n startServer(serverIp) async {\r\n   final info = NetworkInfo();\r\n   var hostAddress = await info.getWifiIP();\r\n   var portNumber = 4655;\r\n@@ -13,5 +12,5 @@\n     print(\"respuesta : ${res.headers}\");\r\n   });\r\n   print(\"host : ${hostAddress}, portNumber : ${portNumber}\");\r\n   return '$hostAddress:$portNumber';\r\n-}\n\\ No newline at end of file\n+}\r\n"
                },
                {
                    "date": 1695492143220,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,9 +5,9 @@\n   final info = NetworkInfo();\r\n   var hostAddress = await info.getWifiIP();\r\n   var portNumber = 4655;\r\n   //var server = await HttpServer.bind(hostAddress, portNumber, shared: true);\r\n-  var server = await HttpServer.bind(\"192.168.1.227\", portNumber, shared: true);\r\n+  var server = await HttpServer.bind(hostAddress, portNumber, shared: true);\r\n   server.listen((req) async {\r\n     var res = req.response;\r\n     print(\"respuesta : ${res.headers}\");\r\n   });\r\n"
                },
                {
                    "date": 1695492370065,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,16 +1,63 @@\n import 'dart:io';\r\n import 'package:network_info_plus/network_info_plus.dart';\r\n+import 'dart:math';\r\n \r\n-startServer(serverIp) async {\r\n+var indexHtml = '''\r\n+      <!DOCTYPE html>\r\n+<html lang=\"en\">\r\n+  <head>\r\n+    <meta charset=\"UTF-8\" />\r\n+    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n+    <title>HTTP Video Stream</title>\r\n+  </head>\r\n+  <body>\r\n+    <video id=\"videoPlayer\" width=\"650\" controls muted=\"muted\" autoplay>\r\n+      <source src=\"/video\" type=\"video/mp4\" />\r\n+    </video>\r\n+  </body>\r\n+</html>\r\n+\r\n+      ''';\r\n+\r\n+startServer(filePath) async {\r\n   final info = NetworkInfo();\r\n   var hostAddress = await info.getWifiIP();\r\n   var portNumber = 4655;\r\n-  //var server = await HttpServer.bind(hostAddress, portNumber, shared: true);\r\n   var server = await HttpServer.bind(hostAddress, portNumber, shared: true);\r\n   server.listen((req) async {\r\n     var res = req.response;\r\n-    print(\"respuesta : ${res.headers}\");\r\n+    var uri = req.uri.toString();\r\n+    if (uri == '/video') {\r\n+      final range = req.headers.value('range');\r\n+      var videoFile = File(filePath);\r\n+      var videoSize = await videoFile.length();\r\n+      const CHUNK_SIZE = 1000000;\r\n+      final startValue = range!.replaceAllMapped(\r\n+          RegExp(\r\n+            r'(\\D)',\r\n+          ),\r\n+          (match) => '');\r\n+      final start = int.parse(startValue);\r\n+\r\n+      var end = min<int>(start + CHUNK_SIZE, videoSize);\r\n+\r\n+      var videoStream = videoFile.openRead(start, end);\r\n+      // Create headers\r\n+      final contentLength = end - start;\r\n+      print('$start $end $contentLength');\r\n+\r\n+      res.headers\r\n+        ..add('Content-Range', 'bytes $start-$end/$videoSize')\r\n+        ..add('Accept-Ranges', 'bytes')\r\n+        ..add('Content-Length', contentLength)\r\n+        ..add('Content-Type', 'video/mp4');\r\n+      await videoStream.pipe(res);\r\n+      await res.close();\r\n+    } else if (uri == '/') {\r\n+      res.headers.add('Content-Type', 'text/html');\r\n+      res.write(indexHtml);\r\n+      await res.close();\r\n+    }\r\n   });\r\n-  print(\"host : ${hostAddress}, portNumber : ${portNumber}\");\r\n   return '$hostAddress:$portNumber';\r\n-}\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1695492447261,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,8 +24,9 @@\n   var hostAddress = await info.getWifiIP();\r\n   var portNumber = 4655;\r\n   var server = await HttpServer.bind(hostAddress, portNumber, shared: true);\r\n   server.listen((req) async {\r\n+    print(req);\r\n     var res = req.response;\r\n     var uri = req.uri.toString();\r\n     if (uri == '/video') {\r\n       final range = req.headers.value('range');\r\n"
                },
                {
                    "date": 1695492480301,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,10 +24,11 @@\n   var hostAddress = await info.getWifiIP();\r\n   var portNumber = 4655;\r\n   var server = await HttpServer.bind(hostAddress, portNumber, shared: true);\r\n   server.listen((req) async {\r\n+    \r\n+    var res = req.response;\r\n     print(req);\r\n-    var res = req.response;\r\n     var uri = req.uri.toString();\r\n     if (uri == '/video') {\r\n       final range = req.headers.value('range');\r\n       var videoFile = File(filePath);\r\n"
                },
                {
                    "date": 1695492492848,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,9 +25,9 @@\n   var portNumber = 4655;\r\n   var server = await HttpServer.bind(hostAddress, portNumber, shared: true);\r\n   server.listen((req) async {\r\n     var res = req.response;\r\n-    print(req);\r\n+    print(\"res $req\");\r\n     var uri = req.uri.toString();\r\n     if (uri == '/video') {\r\n       final range = req.headers.value('range');\r\n       var videoFile = File(filePath);\r\n"
                },
                {
                    "date": 1695492549503,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,9 +25,9 @@\n   var portNumber = 4655;\r\n   var server = await HttpServer.bind(hostAddress, portNumber, shared: true);\r\n   server.listen((req) async {\r\n     var res = req.response;\r\n-    print(\"res $res\");\r\n+    print(\"res ${res.reasonPhrase}\");\r\n     var uri = req.uri.toString();\r\n     if (uri == '/video') {\r\n       final range = req.headers.value('range');\r\n       var videoFile = File(filePath);\r\n"
                }
            ],
            "date": 1695489225137,
            "name": "Commit-0",
            "content": "import 'dart:io';\r\nimport 'package:network_info_plus/network_info_plus.dart';\r\nimport 'dart:math';\r\n\r\nvar indexHtml = '''\r\n      <!DOCTYPE html>\r\n<html lang=\"en\">\r\n  <head>\r\n    <meta charset=\"UTF-8\" />\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n    <title>HTTP Video Stream</title>\r\n  </head>\r\n  <body>\r\n    <video id=\"videoPlayer\" width=\"650\" controls muted=\"muted\" autoplay>\r\n      <source src=\"/video\" type=\"video/mp4\" />\r\n    </video>\r\n  </body>\r\n</html>\r\n\r\n      ''';\r\n\r\nstartServer(filePath) async {\r\n  final info = NetworkInfo();\r\n  var hostAddress = await info.getWifiIP();\r\n  var portNumber = 4655;\r\n  var server = await HttpServer.bind(hostAddress, portNumber, shared: true);\r\n  server.listen((req) async {\r\n    var res = req.response;\r\n    var uri = req.uri.toString();\r\n    if (uri == '/video') {\r\n      final range = req.headers.value('range');\r\n      var videoFile = File(filePath);\r\n      var videoSize = await videoFile.length();\r\n      const CHUNK_SIZE = 1000000;\r\n      final startValue = range!.replaceAllMapped(\r\n          RegExp(\r\n            r'(\\D)',\r\n          ),\r\n          (match) => '');\r\n      final start = int.parse(startValue);\r\n\r\n      var end = min<int>(start + CHUNK_SIZE, videoSize);\r\n\r\n      var videoStream = videoFile.openRead(start, end);\r\n      // Create headers\r\n      final contentLength = end - start;\r\n      print('$start $end $contentLength');\r\n\r\n      res.headers\r\n        ..add('Content-Range', 'bytes $start-$end/$videoSize')\r\n        ..add('Accept-Ranges', 'bytes')\r\n        ..add('Content-Length', contentLength)\r\n        ..add('Content-Type', 'video/mp4');\r\n      await videoStream.pipe(res);\r\n      await res.close();\r\n    } else if (uri == '/') {\r\n      res.headers.add('Content-Type', 'text/html');\r\n      res.write(indexHtml);\r\n      await res.close();\r\n    }\r\n  });\r\n  return '$hostAddress:$portNumber';\r\n}"
        }
    ]
}